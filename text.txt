Let n be equal to the amount of times the for loop would execute and print "Hello world" and numThreads be equal to the number of threads. When n was a multiple of the number of threads, then each thread would be responsible for n/numThreads execututions. This means that if n were to be 10 and there were 2 threads, each thread would execute the print 5 times. If the number of threads is not a multiple, each thread will be responsible for n/numThreads(floored), the remainder of the executions will be dealt with starting at the lowest id thread. The lowest id thread will execute and the second lowest id thread will then execute if necessary (this is repeated if necessary). This means that the threads do not have to execute sequentially(you do not have to use thread 0 before you use thread 1), thread 0 could be responsible for 2 executions in the beginning of the program but then is required to execute again at the end of the program. This is especially shown when n = 100 and the first execution uses thread 67 and the second using thread 2.
